name: Continuous Integration

on: 
  pull_request:
    branches:
      - main
  
jobs:
  test:
    runs-on: ubuntu-latest
    # runs-on: self-hosted
  
    # strategy:
      # matrix:
        # node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    container: node:14.17.0-alpine

    services:
      postgres:
        image: postgres:12.5-alpine
        env:
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD_TEST }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
  
    steps:
    - uses: actions/checkout@v2
    # - name: Use Node.js ${{ matrix.node-version }}
      # uses: actions/setup-node@v2
      # with:
        # node-version: ${{ matrix.node-version }}
    - name: npm install migrate and test
      run: |
        npm install
        npm run createdb
        npm run migrate up
        npm run test
      env:
        CI: true
        PGHOST_TEST: ${{ secrets.PGHOST_TEST }}
        PGUSER_TEST: ${{ secrets.PGUSER_TEST }}
        PGDATABASE_TEST: ${{ secrets.PGDATABASE }}  # ${{ secrets.PGDATABASE_TEST }}
        PGPASSWORD_TEST: ${{ secrets.PGPASSWORD }}  # ${{ secrets.PGPASSWORD_TEST }}
        PGPORT_TEST: ${{ secrets.PGPORT_TEST }}
        PGHOST: ${{ secrets.PGHOST_TEST }}
        PGUSER: ${{ secrets.PGUSER_TEST }}
        PGDATABASE: ${{ secrets.PGDATABASE }}  # ${{ secrets.PGDATABASE_TEST }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}  # ${{ secrets.PGPASSWORD_TEST }}
        PGPORT: ${{ secrets.PGPORT_TEST }}
        ACCESS_TOKEN_KEY: ${{ secrets.ACCESS_TOKEN_KEY }}
        REFRESH_TOKEN_KEY: ${{ secrets.REFRESH_TOKEN_KEY }}
